sim_basket <- sample(shot_outcomes, size = 133, replace = TRUE,prob = c(0.45, 0.55))
sim_basket
View(kobe_basket)
View(kobe_basket)
View(kobe_streak)
View(kobe_streak)
ggplot(data = sim_basket, aes(x = length)) +
geom_histogram(binwidth = 1)
pnorm(24,mean=21,std=5)
pnorm(24,mean=21,sd=5)
qnorm(0.9,21,5)
qnorm(0.1,21,5)
pnorm(50, 45,3.2)
qnorm(0.2, 77,5)
dbinom(8, size=10, p=0.13)
sum(dbinom(60:100, size=100, p=0.56))
qnorm(0.01)
qnorm(0.05)
qnorm(0.025)
qnorm(0.005)
library(statsr)
library(dplyr)
library(shiny)
library(ggplot2)
data(ames)
ggplot(data = ames, aes(x = area)) +
geom_histogram(binwidth = 250)
ames %>%
summarise(mu = mean(area), pop_med = median(area),
sigma = sd(area), pop_iqr = IQR(area),
pop_min = min(area), pop_max = max(area),
pop_q1 = quantile(area, 0.25),  # first quartile, 25th percentile
pop_q3 = quantile(area, 0.75))  # third quartile, 75th percentile
samp1 <- ames %>%
sample_n(size = 50)
samp1 %>%
summarise(x_bar = mean(area))
ames %>%
sample_n(size = 50) %>%
summarise(x_bar = mean(area))
sample_means50 <- ames %>%
rep_sample_n(size = 50, reps = 15000, replace = TRUE) %>%
summarise(x_bar = mean(area))
ggplot(data = sample_means50, aes(x = x_bar)) +
geom_histogram(binwidth = 20)
ames %>%
sample_n(size = 50) %>%
summarise(x_bar = mean(area))
ames %>%
sample_n(size = 50) %>%
summarise(x_bar = mean(area))
rm(list=ls())
library(statsr)
library(dplyr)
library(shiny)
library(ggplot2)
data(ames)
ggplot(data = ames, aes(x = area)) +
geom_histogram(binwidth = 250)
ames %>%
summarise(mu = mean(area), pop_med = median(area),
sigma = sd(area), pop_iqr = IQR(area),
pop_min = min(area), pop_max = max(area),
pop_q1 = quantile(area, 0.25),  # first quartile, 25th percentile
pop_q3 = quantile(area, 0.75))  # third quartile, 75th percentile
View(ames)
View(ames)
samp1 <- ames %>%
sample_n(size = 50)
samp1 %>%
summarise(x_bar = mean(area))
ames %>%
sample_n(size = 50) %>%
summarise(x_bar = mean(area))
sample_means50 <- ames %>%
rep_sample_n(size = 50, reps = 15000, replace = TRUE) %>%
summarise(x_bar = mean(area))
ggplot(data = sample_means50, aes(x = x_bar)) +
geom_histogram(binwidth = 20)
View(sample_means50)
qnorm(0.05)
pnorm(1.39)
qnorm(0.01)
rm
rm()
ls()
rm(list=ls())
set.seed(9102015)
library(statsr)
library(dplyr)
library(ggplot2)
data(ames)
n <- 60
samp <- sample_n(ames, n)
z_star_95 <- qnorm(0.975)
z_star_95
samp %>%
summarise(lower = mean(area) - z_star_95 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_95 * (sd(area) / sqrt(n)))
params <- ames %>%
summarise(mu = mean(area))
params
ci <- ames %>%
rep_sample_n(size = n, reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_95 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_95 * (sd(area) / sqrt(n)))
qnorm(0.005)
ci %>%
slice(1:5)
ci <- ci %>%
mutate(capture_mu = ifelse(lower < params$mu & upper > params$mu, "yes", "no"))
ci_data <- data.frame(ci_id = c(1:50, 1:50),
ci_bounds = c(ci$lower, ci$upper),
capture_mu = c(ci$capture_mu, ci$capture_mu))
ggplot(data = ci_data, aes(x = ci_bounds, y = ci_id,
group = ci_id, color = capture_mu)) +
geom_point(size = 2) +  # add points at the ends, size = 2
geom_line() +           # connect with lines
geom_vline(xintercept = params$mu, color = "darkgray") # draw vertical line
pnorm(2)
pt(2)
pt(2, df=10)
pnorm(2)
pnorm(2, lower.tail = TRUE)
pnorm(2, lower.tail = FALSE)
pnorm(2, lower.tail = FALSE)*2
pt(2,df=50, lower.tail = FALSE)
pt(2,df=50, lower.tail = FALSE)*2
pt(2,df=10, lower.tail = FALSE)*2
qt(0.025, df=21)
pt(0.025, df=21)
qt(0.025, df=21)
pt(2.24, df=21)
pt(2.24, df=21, lower.tail = FALSE)
pt(2.24, df=21, lower.tail = FALSE)*2
qt(-0.87, df=199)
pt(-0.87, df=199)
pt(-0.87, df=199)*2
pt(-0.2, df=99)
qt(0.8, df=99)
install.packages("GGally")
dbinom(6,size=10,p=0.56)
dbinom(600,size=1000,p=0.56)
sum(dbinom(60:100, size=100,p=56))
sum(dbinom(60:100, size=100,p=0.56))
dbinom(1,size=10,p=0.7)
sum(dbinom(1:10,size=10,p=0.7))
sum(dbinom(1:10,size=10,p=0.07))
sum(dbinom(50:160,size=160,p=0.28))
(dbinom(50,size=160,p=0.28)
dbinom(50,size=160,p=0.28)
dbinom(50,size=160,p=0.28)
load("~/Desktop/Statistics_with_R_Duke/1_Introduction to Probability and Data/project/brfss2013.Rdata")
library(ggplot2)
library(dplyr)
load("brfss2013.RData")
load("brfss2013.RData")
load("brfss2013.RData")
getwd
getwd()
setwd("~/Desktop/Statistics_with_R_Duke/1_Introduction to Probability and Data/project/")
load("brfss2013.RData")
getwd()
ls()
setwd('./Week4_practiceproject')
setwd("./Week4_practiceproject")
getwd()
ls()
setwd("../Week4_practiceproject/")
ls()
getwd()
ls()
ls()
getwd()
ls()
load("selected_nzes2011.Rdata")
library(dplyr)
selected_nzes2011 %>%
select(jpartyvote, jdiffvoting, _singlefav) %>%
str()
names(selected_nzes2011)
selected_nzes2011
selected_nzes2011 %>%
select(jpartyvote, jdiffvoting, _singlefav)
grep("singlefav", names(selected_nzes2011), value = TRUE)
selected_nzes2011 %>%
select(jpartyvote, jdiffvoting, X_singlefav) %>%
str()
selected_nzes2011 %>%
group_by(jpartyvote) %>%
summarise(count = n())
selected_nzes2011 %>%
filter(jpartyvote != "Don't know") %>%
group_by(jpartyvote) %>%
summarise(count = n())
selected_nzes2011 %>%
group_by(X_singlefav) %>%
summarise(count = n())
selected_nzes2011 %>%
filter(!is.na(X_singlefav)) %>%
group_by(X_singlefav) %>%
summarise(count = n())
selected_nzes2011 %>%
filter(!is.na(X_singlefav), jpartyvote != "Don't know") %>%
group_by(X_singlefav) %>%
summarise(count=n())
selected_nzes2011 %>%
group_by(jdiffvoting) %>%
summarise(count = n())
selected_nzes2011 <- selected_nzes2011 %>%
mutate(sameparty = ifelse(jpartyvote == X_singlefav, "same", "different"))
selected_nzes2011 %>%
group_by(jpartyvote, X_singlefav, sameparty) %>%
summarise(count = n())
selected_nzes2011 %>%
group_by(jpartyvote, X_singlefav, sameparty) %>%
summarise(count = n()) %>%
filter(sameparty == "same")
selected_nzes2011 %>%
group_by(jpartyvote, X_singlefav, sameparty) %>%
summarise(count = n()) %>%
filter(is.na(sameparty))
str(selected_nzes2011$jnzflike)
str(selected_nzes2011$jage)
selected_nzes2011 %>%
group_by(jnzflike) %>%
summarise(count = n())
selected_nzes2011 %>%
summarise(agemean = mean(jage), agemedian = median(jage), agesd = sd(jage),
agemin = min(jage), agemax = max(jage))
?median
selected_nzes2011 %>%
filter(!(is.na(jage))) %>%
summarise(agemean = mean(jage), agemedian = median(jage), agesd = sd(jage),
agemin = min(jage), agemax = max(jage))
selected_nzes2011 %>%
filter(jnzflike %in% c("0","10")) %>%
group_by(jnzflike) %>%
summarise(count = n())
selected_nzes2011 <- selected_nzes2011 %>%
mutate(retiredage = ifelse(jage >= 65, "retired age", "working age"))
selected_nzes2011 %>%
group_by(retiredage) %>%
summarise(count = n())
selected_nzes2011 %>%
group_by(retiredage) %>%
summarise(medlike = median(jnzflike))
selected_nzes2011 <- selected_nzes2011 %>%
mutate(numlikenzf = as.numeric(jnzflike))
selected_nzes2011 %>%
group_by(jnzflike, numlikenzf) %>%
summarise(count = n())
selected_nzes2011 <- selected_nzes2011 %>%
mutate(numlikenzf = as.numeric(as.character(jnzflike)))
selected_nzes2011 %>%
group_by(jnzflike, numlikenzf) %>%
summarise(count = n())
view()
View()
selected_nzes2011 %>%
select(jpartyvote, jdiffvoting, _singlefav) %>%
str()
selected_nzes2011
selected_nzes2011
selected_nzes2011 %>%
select(jpartyvote, jdiffvoting, _singlefav)
names(selected_nzes2011)
grep("singlefav", names(selected_nzes2011), value = TRUE)
grep("singlefav", names(selected_nzes2011))
selected_nzes2011 %>%
select(jpartyvote, jdiffvoting, X_singlefav) %>%
str()
selected_nzes2011 %>%
group_by(jpartyvote) %>%
summarise(count = n())
selected_nzes2011 %>%
filter(jpartyvote != "Don't know") %>%
group_by(jpartyvote) %>%
summarise(count = n())
selected_nzes2011 %>%
group_by(X_singlefav) %>%
summarise(count = n())
selected_nzes2011 %>%
filter(!is.na(X_singlefav)) %>%
group_by(X_singlefav) %>%
summarise(count = n())
selected_nzes2011 %>%
filter(!is.na(X_singlefav), jpartyvote != "Don't know") %>%
group_by(X_singlefav) %>%
summarise(count=n())
selected_nzes2011 %>%
group_by(jdiffvoting) %>%
summarise(count = n())
selected_nzes2011 <- selected_nzes2011 %>%
mutate(sameparty = ifelse(jpartyvote == X_singlefav, "same", "different"))
names(selected_nzes2011)
grep("sameparty", names(selected_nzes2011), value = TRUE)
selected_nzes2011 %>%
group_by(jpartyvote, X_singlefav, sameparty) %>%
summarise(count = n())
selected_nzes2011 %>%
group_by(jpartyvote, X_singlefav, sameparty) %>%
summarise(count = n()) %>%
filter(sameparty=="same")
selected_nzes2011 %>%
group_by(jpartyvote, X_singlefav, sameparty) %>%
filter(sameparty=="different")
filter(sameparty=="same")
selected_nzes2011 %>%
group_by(jpartyvote, X_singlefav, sameparty) %>%
summarise(count = n()) %>%
filter(sameparty == "different")
selected_nzes2011 %>%
group_by(jpartyvote, X_singlefav, sameparty) %>%
summarise(count = n()) %>%
filter(is.na(sameparty))
str(selected_nzes2011$jnzflike)
str(selected_nzes2011)
str(selected_nzes2011$jnzflike)
str(selected_nzes2011$jage)
selected_nzes2011 %>%
group_by(jnzflike) %>%
summarise(count = n())
selected_nzes2011 %>%
summarise(agemean = mean(jage), agemedian = median(jage), agesd = sd(jage),
agemin = min(jage), agemax = max(jage))
?median
selected_nzes2011 %>%
filter(!(is.na(jage))) %>%
summarise(agemean = mean(jage), agemedian = median(jage), agesd = sd(jage),
agemin = min(jage), agemax = max(jage))
selected_nzes2011 %>%
summarise(agemean = mean(jage, na.rm=TRUE), agemedian = median(jage, na.rm=TRUE), agesd = sd(jage, na.rm=TRUE),
agemin = min(jage, na.rm=TRUE), agemax = max(jage, na.rm=TRUE))
selected_nzes2011 %>%
filter(jnzflike %in% c("0","10")) %>%
group_by(jnzflike) %>%
summarise(count = n())
selected_nzes2011 <- selected_nzes2011 %>%
mutate(retiredage = ifelse(jage >= 65, "retired age", "working age"))
selected_nzes2011 %>%
group_by(retiredage) %>%
summarise(count = n())
selected_nzes2011 %>%
group_by(retiredage) %>%
summarise(medlike = median(jnzflike))
selected_nzes2011 <- selected_nzes2011 %>%
mutate(numlikenzf = as.numeric(jnzflike))
selected_nzes2011 %>%
group_by(jnzflike, numlikenzf) %>%
summarise(count = n())
selected_nzes2011 <- selected_nzes2011 %>%
mutate(numlikenzf = as.numeric(as.character(jnzflike)))
selected_nzes2011 %>%
group_by(jnzflike, numlikenzf) %>%
summarise(count = n())
getwd()
getwd()
setwd("~/Desktop/Statistics_with_R_Duke/1_Introduction to Probability and Data/project")
rm()
ls()
rm(list=ls())
ls()
load("brfss2013.RData")
names("brfss2013.RData")
brfss2013
library(dplyr)
names("brfss2013.RData")
library(ggplot2)
load("brfss2013.RData")
brfss2013
names(brfss2013)
grep("padur", names(brfss2013), value=TRUE)
grep("arth",names(brfss2013),value = TRUE)
library("car")
install.packages("car")
library("car")
scatterplotMatrix("menthlth","sleptim1","exerany2")
scatterplotMatrix("menthlth","sleptim1")
scatterplotMatrix(brfss2013$menthlth,brfss2013$sleptim1)
names(brfss2013)
brfss2013 %>% select(fruit1)
brfss2013 %>% select(fruit1)
brfss2013 %>%
select(fruit1) %>%
str()
brfss2013 %>%
group_by(fruit1) %>%
summarise(count=n())
setwd("~/Desktop/Statistics_with_R_Duke/1_Introduction to Probability and Data/Week4_practiceproject")
setwd("~/Desktop/Statistics_with_R_Duke/1_Introduction to Probability and Data/project")
ggplot(data = brfss2013, aes(x = joinpain, y =exerhmm1)) +
geom_point()
ggplot(data = brfss2013, aes(x = joinpain, y =exerhmm1)) +
geom_bar()
ggplot(data = brfss2013, aes(x = joinpain)) +
geom_bar()
ggplot(data = brfss2013, aes(x = joinpain)) +
geom_histogram()
plotmatrix(brfss2013[,1:3])
install.packages("lattice")
install.packages("lattice")
install.packages("mlmRev")
data(Chem97, package="mlmRev")
head(Chem97)
histogram(~ gcsescore, data=Chem98)
histogram(~ gcsescore, data=Chem97)
library(lattice)
histogram(~ gcsescore, data=Chem97)
histogram(~ gcsescore| factor(score), data=Chem97)
densityplot(~ gcsescore | factor(score), Chem97, groups = gender,
plot.points = FALSE, auto.key = TRUE)
qqmath(~ gcsescore | factor(score), Chem97, groups = gender,
f.value = ppoints(100), auto.key = list(columns = 2),
type = c("p", "g"), aspect = "xy")
qq(gender ~ gcsescore | factor(score), Chem97,
f.value = ppoints(100), type = c("p", "g"), aspect = 1)
bwplot(factor(score) ~ gcsescore | gender, Chem97)
bwplot(gcsescore ~ gender | factor(score), Chem97, layout = c(6, 1))
stripplot(depth ~ factor(mag), data = quakes,
jitter.data = TRUE, alpha = 0.6,
main = "Depth of earthquake epicenters by magnitude",
xlab = "Magnitude (Richter)",
ylab = "Depth (km)")
VADeaths
VADeathsDF <- as.data.frame.table(VADeaths, responseName = "Rate")
VADeathsDF
barchart(Var1 ~ Rate | Var2, VADeathsDF, layout = c(4, 1))
barchart(Var1 ~ Rate | Var2, VADeathsDF, layout = c(4, 1), origin = 0)
dotplot(Var1 ~ Rate | Var2, VADeathsDF, layout = c(4, 1))
dotplot(Var1 ~ Rate, data = VADeathsDF, groups = Var2, type = "o",
auto.key = list(space = "right", points = TRUE, lines = TRUE))
dotplot(VADeaths, type = "o",
auto.key = list(points = TRUE, lines = TRUE, space = "right"))
methods(generic.function = "dotplot")
install.packages()
data(Earthquake, package='nlme')
xyplot(accel ~ distance, data = Earthquake)
xyplot(accel ~ distance, data = Earthquake, scales = list(log = TRUE),
type = c("p", "g", "smooth"), xlab = "Distance From Epicenter (km)",
ylab = "Maximum Horizontal Acceleration (g)")
Depth <- equal.count(quakes$depth, number=8, overlap=.1)
summary(Depth)
xyplot(lat ~ long | Depth, data = quakes)
cloud(depth ~ lat * long, data = quakes,
zlim = rev(range(quakes$depth)),
screen = list(z = 105, x = -70), panel.aspect = 0.75,
xlab = "Longitude", ylab = "Latitude", zlab = "Depth")
> dp.uspe <-
dotplot(t(USPersonalExpenditure), groups = FALSE, layout = c(1, 5),
xlab = "Expenditure (billion dollars)")
> dp.uspe.log <-
dotplot(t(USPersonalExpenditure), groups = FALSE, layout = c(1, 5),
scales = list(x = list(log = 2)),
xlab = "Expenditure (billion dollars)")
> plot(dp.uspe, split = c(1, 1, 2, 1))
> plot(dp.uspe.log, split = c(2, 1, 2, 1), newpage = FALSE)
wine <- read.table("http://archive.ics.uci.edu/ml/machine-learning-databases/wine/wine.data",
sep=",")
library("car")
wine[2:6]
scatterplotMatrix(wine[2:6])
View(wine)
View(wine)
getwd()
data(iris)
pairs(iris[,1:4])
pairs(iris[,1:4], col=iris$Species)
plotmatrix(iris[,1:4], colour="gray20")
library(ggplot2)
plotmatrix(iris[,1:4], colour="gray20")
plotmatrix(iris[,1:4], colour="gray20")
plotmatrix(iris[,1:4], colour="gray20") +
geom_smooth(method="lm")
plotmatrix(iris[,1:4], colour="gray20")
library(ggplot2)
plotmatrix(iris[,1:4])
install.packages("GGally")
library(GGally)
ggpairs(iris, aes(colour=Species, alpha=0.4))
plotmatrix(iris)
library(ggplot2)
data(mtcars)
plotmatrix(mtcars[,1:3])
plot(cars)
plot(cars)
scatterplotMatrix(wine[2:6])
plot(cars)
plotmatrix(iris)
ggpairs(iris, aes(colour=Species, alpha=0.4))
pg <- plotmatrix(with(mtcars, data.frame(mpg, disp, hp, drat,
+ wt, qsec)))
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
pg <- plotmatrix(with(mtcars, data.frame(mpg, disp, hp, drat,
+ wt, qsec)))
library(shiny)
ggpairs(iris, aes(colour=Species, alpha=0.4))
library(GGally)
ggpairs(iris, aes(colour=Species, alpha=0.4))
data("iris")
ggpairs(iris, aes(colour=Species, alpha=0.4))
library(ggplot2)
ggpairs(iris, aes(colour=Species, alpha=0.4))
ggpairs(iris
)
ggpairs(iris, aes(colour=Species, alpha=0.4))
